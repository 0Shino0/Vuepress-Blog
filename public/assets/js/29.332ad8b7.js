(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{617:function(a,s,t){"use strict";t.r(s);var r=t(1),e=Object(r.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"linux"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux"}},[a._v("#")]),a._v(" Linux")]),a._v(" "),s("h2",{attrs:{id:"一-linux基本命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一-linux基本命令"}},[a._v("#")]),a._v(" 一 Linux基本命令")]),a._v(" "),s("h3",{attrs:{id:"网络测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网络测试"}},[a._v("#")]),a._v(" 网络测试")]),a._v(" "),s("p",[a._v("ping")]),a._v(" "),s("p",[a._v("ipconfig")]),a._v(" "),s("h3",{attrs:{id:"帮助命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#帮助命令"}},[a._v("#")]),a._v(" 帮助命令")]),a._v(" "),s("p",[s("code",[a._v("--help")])]),a._v(" "),s("p",[s("code",[a._v("man")]),a._v("命令")]),a._v(" "),s("p",[s("code",[a._v("info")]),a._v("命令")]),a._v(" "),s("h2",{attrs:{id:"三-linux系统-统计-查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三-linux系统-统计-查询"}},[a._v("#")]),a._v(" 三 Linux系统 统计 查询")]),a._v(" "),s("h3",{attrs:{id:"grep命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grep命令"}},[a._v("#")]),a._v(" grep命令")]),a._v(" "),s("p",[a._v("Linux grep (global regular expression) 命令用于"),s("strong",[a._v("查找文件里符合条件的字符串或正则表达式。")])]),a._v(" "),s("p",[a._v("grep 指令用于查找内容包含指定的范本样式的文件，如果发现某文件的内容符合所指定的范本样式，预设 grep 指令会把含有范本样式的那一列显示出来。若不指定任何文件名称，或是所给予的文件名为 "),s("strong",[a._v("-")]),a._v("，则 grep 指令会从标准输入设备读取数据。")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" pattern "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("files"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n或\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-abcEFGhHilLnqrsvVwxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-A"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("显示行数"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-B"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("显示列数"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-C"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("显示列数"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-d"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("进行动作"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-e"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("范本样式"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-f"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("范本文件"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("--help"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("范本样式"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("文件或目录"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"find命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#find命令"}},[a._v("#")]),a._v(" find命令")]),a._v(" "),s("p",[a._v("Linux find 命令用于在指定目录下查找文件和目录。")]),a._v(" "),s("p",[a._v("它可以使用不同的选项来过滤和限制查找的结果。")]),a._v(" "),s("p",[s("code",[a._v("find -name 'main*'")])]),a._v(" "),s("p",[s("code",[a._v("find -name practice -print")])]),a._v(" "),s("p",[s("code",[a._v("find ~ -atime 0")])]),a._v(" "),s("p",[s("code",[a._v("find -size 16")])]),a._v(" "),s("p",[s("code",[a._v("find -type c")])]),a._v(" "),s("h3",{attrs:{id:"wc命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wc命令"}},[a._v("#")]),a._v(" wc命令")]),a._v(" "),s("p",[a._v("Linux wc命令用于计算字数。")]),a._v(" "),s("p",[a._v('利用wc指令我们可以计算文件的Byte数、字数、或是列数，若不指定文件名称、或是所给予的文件名为"-"，则wc指令会从标准输入设备读取数据。')]),a._v(" "),s("h3",{attrs:{id:"sort命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sort命令"}},[a._v("#")]),a._v(" sort命令")]),a._v(" "),s("p",[a._v("Linux sort 命令用于将文本文件内容加以排序。")]),a._v(" "),s("p",[a._v("sort 可针对文本文件的内容，以行为单位来排序。")]),a._v(" "),s("h2",{attrs:{id:"四-linux-vi编辑器的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四-linux-vi编辑器的使用"}},[a._v("#")]),a._v(" 四 Linux vi编辑器的使用")]),a._v(" "),s("p",[a._v("所有的 Unix Like 系统都会内建 vi 文书编辑器，其他的文书编辑器则不一定会存在。")]),a._v(" "),s("p",[a._v("但是目前我们使用比较多的是 vim 编辑器。")]),a._v(" "),s("p",[a._v("vim 具有程序编辑的能力，可以主动的以字体颜色辨别语法的正确性，方便程序设计。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://shinoimg.yyshino.top/img/202305092313708.gif",alt:"img"}})]),a._v(" "),s("h3",{attrs:{id:"vi-文件名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vi-文件名"}},[a._v("#")]),a._v(" vi [文件名]")]),a._v(" "),s("p",[a._v("命令模式（Command mode）：输入字符都作为命令来解释执行。不显示输入内容。")]),a._v(" "),s("p",[a._v("输入模式（Insert mode）：输入的任何字符都将作为文件内容被保存，并显示在屏幕上。")]),a._v(" "),s("p",[a._v("末行模式（Last line mode）：在屏幕最末行接收行命令输入，并执行。")]),a._v(" "),s("p",[a._v("练习3种工模间的切换")]),a._v(" "),s("h3",{attrs:{id:"退出相关命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#退出相关命令"}},[a._v("#")]),a._v(" 退出相关命令")]),a._v(" "),s("p",[a._v("三个退出命令的区别")]),a._v(" "),s("p",[s("code",[a._v(":q")])]),a._v(" "),s("p",[a._v("如果文件有修改，:q 会提示有修改，是否退出，输入y退出")]),a._v(" "),s("p",[s("code",[a._v(":wq")])]),a._v(" "),s("p",[a._v(":wq 如果文件设置为只读了的话，用 :wq命令是不能保存并退出的")]),a._v(" "),s("p",[s("code",[a._v(":q!")])]),a._v(" "),s("p",[a._v("若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。")]),a._v(" "),s("h3",{attrs:{id:"一般模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一般模式"}},[a._v("#")]),a._v(" 一般模式")]),a._v(" "),s("p",[a._v("可用的光标移动、复制粘贴、搜索替换等")]),a._v(" "),s("h3",{attrs:{id:"增删查改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#增删查改"}},[a._v("#")]),a._v(" 增删查改")]),a._v(" "),s("h4",{attrs:{id:"插入-删除命令（iao-dd-dw-x"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插入-删除命令（iao-dd-dw-x"}},[a._v("#")]),a._v(" 插入/删除命令（iao,dd dw x)")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("命令")]),a._v(" "),s("th",[a._v("描述")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("dd")]),a._v(" "),s("td",[a._v("剪切游标所在的那一整行(常用)，用 p/P 可以粘贴。")])]),a._v(" "),s("tr",[s("td",[a._v("dw")]),a._v(" "),s("td")]),a._v(" "),s("tr",[s("td",[a._v("iao")]),a._v(" "),s("td")]),a._v(" "),s("tr",[s("td",[a._v("x")]),a._v(" "),s("td",[a._v("在一行字当中，x 为向后删除一个字符 (相当于 [del] 按键)， X 为向前删除一个字符(相当于 [backspace] 亦即是退格键) (常用)")])])])]),a._v(" "),s("h4",{attrs:{id:"查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查询"}},[a._v("#")]),a._v(" 查询")]),a._v(" "),s("h4",{attrs:{id:"修改-替换命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改-替换命令"}},[a._v("#")]),a._v(" 修改/替换命令")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("命令")]),a._v(" "),s("th",[a._v("描述")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("/word")]),a._v(" "),s("td",[a._v("向光标之下寻找一个名称为 word 的字符串。例如要在档案内搜寻 vbird 这个字符串，就输入 /vbird 即可！ (常用)")])]),a._v(" "),s("tr",[s("td",[a._v("?word")]),a._v(" "),s("td",[a._v("向光标之上寻找一个字符串名称为 word 的字符串。")])]),a._v(" "),s("tr",[s("td",[a._v("n")]),a._v(" "),s("td",[a._v("这个 n 是英文按键。代表重复前一个搜寻的动作。举例来说， 如果刚刚我们执行 /vbird 去向下搜寻 vbird 这个字符串，则按下 n 后，会向下继续搜寻下一个名称为 vbird 的字符串。如果是执行 ?vbird 的话，那么按下 n 则会向上继续搜寻名称为 vbird 的字符串！")])]),a._v(" "),s("tr",[s("td",[a._v("N")]),a._v(" "),s("td",[a._v("这个 N 是英文按键。与 n 刚好相反，为『反向』进行前一个搜寻动作。 例如 /vbird 后，按下 N 则表示『向上』搜寻 vbird 。")])])])]),a._v(" "),s("p",[a._v("示例")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("示例命令")]),a._v(" "),s("th",[a._v("描述")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v(":n1,n2s/word1/word2/g")]),a._v(" "),s("td",[a._v("n1 与 n2 为数字。在第 n1 与 n2 行之间寻找 word1 这个字符串，并将该字符串取代为 word2 ！举例来说，在 100 到 200 行之间搜寻 vbird 并取代为 VBIRD 则： 『:100,200s/vbird/VBIRD/g』。(常用)")])]),a._v(" "),s("tr",[s("td",[s("strong",[a._v(":1,$s/word1/word2/g")]),a._v(" 或 "),s("strong",[a._v(":%s/word1/word2/g")])]),a._v(" "),s("td",[a._v("从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！(常用)")])]),a._v(" "),s("tr",[s("td",[s("strong",[a._v(":1,$s/word1/word2/gc")]),a._v(" 或 "),s("strong",[a._v(":%s/word1/word2/gc")])]),a._v(" "),s("td",[a._v("从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！且在取代前显示提示字符给用户确认 (confirm) 是否需要取代！(常用)")])])])]),a._v(" "),s("h3",{attrs:{id:"复制撤销"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复制撤销"}},[a._v("#")]),a._v(" 复制撤销")]),a._v(" "),s("h4",{attrs:{id:"拷贝-粘贴命令-撤销-重做命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拷贝-粘贴命令-撤销-重做命令"}},[a._v("#")]),a._v(" 拷贝/粘贴命令| 撤销/重做命令")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("命令")]),a._v(" "),s("th",[a._v("描述")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("yy")]),a._v(" "),s("td",[a._v("复制游标所在的那一行(常用)")])]),a._v(" "),s("tr",[s("td",[a._v("nyy")]),a._v(" "),s("td",[a._v("n 为数字。复制光标所在的向下 n 行，例如 20yy 则是复制 20 行(常用)")])]),a._v(" "),s("tr",[s("td",[a._v("y1G")]),a._v(" "),s("td",[a._v("复制游标所在行到第一行的所有数据")])]),a._v(" "),s("tr",[s("td",[a._v("yG")]),a._v(" "),s("td",[a._v("复制游标所在行到最后一行的所有数据")])]),a._v(" "),s("tr",[s("td",[a._v("y0")]),a._v(" "),s("td",[a._v("复制光标所在的那个字符到该行行首的所有数据")])]),a._v(" "),s("tr",[s("td",[a._v("y$")]),a._v(" "),s("td",[a._v("复制光标所在的那个字符到该行行尾的所有数据")])]),a._v(" "),s("tr",[s("td",[a._v("p, P")]),a._v(" "),s("td",[a._v("p 为将已复制的数据在光标下一行贴上，P 则为贴在游标上一行！ 举例来说，我目前光标在第 20 行，且已经复制了 10 行数据。则按下 p 后， 那 10 行数据会贴在原本的 20 行之后，亦即由 21 行开始贴。但如果是按下 P 呢？ 那么原本的第 20 行会被推到变成 30 行。 (常用)")])]),a._v(" "),s("tr",[s("td",[a._v("J")]),a._v(" "),s("td",[a._v("将光标所在行与下一行的数据结合成同一行")])]),a._v(" "),s("tr",[s("td",[a._v("c")]),a._v(" "),s("td",[a._v("重复删除多个数据，例如向下删除 10 行，[ 10cj ]")])]),a._v(" "),s("tr",[s("td",[a._v("u")]),a._v(" "),s("td",[a._v("复原前一个动作。(常用)")])]),a._v(" "),s("tr",[s("td",[a._v("[Ctrl]+r")]),a._v(" "),s("td",[a._v("重做上一个动作。(常用)")])]),a._v(" "),s("tr",[s("td"),a._v(" "),s("td",[a._v("这个 u 与 [Ctrl]+r 是很常用的指令！一个是复原，另一个则是重做一次～ 利用这两个功能按键，你的编辑，嘿嘿！很快乐的啦！")])]),a._v(" "),s("tr",[s("td",[a._v(".")]),a._v(" "),s("td",[a._v("不要怀疑！这就是小数点！意思是重复前一个动作的意思。 如果你想要重复删除、重复贴上等等动作，按下小数点『.』就好了！ (常用)")])])])]),a._v(" "),s("h3",{attrs:{id:"sed命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sed命令"}},[a._v("#")]),a._v(" sed命令")]),a._v(" "),s("p",[a._v("Linux sed 命令是利用脚本来处理文本文件。")]),a._v(" "),s("p",[a._v("sed 可依照脚本的指令来处理、编辑文本文件。")]),a._v(" "),s("p",[a._v("Sed 主要用来自动编辑一个或多个文件、简化对文件的反复操作、编写转换程序等。")]),a._v(" "),s("p",[a._v("语法")]),a._v(" "),s("div",{staticClass:"language-linux line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("sed [-hnV][-e<script>][-f<script文件>][文本文件]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[s("a",{attrs:{href:"https://www.runoob.com/linux/linux-comm-sed.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("菜鸟教程sed命令"),s("OutboundLink")],1)]),a._v(" "),s("h3",{attrs:{id:"awk命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#awk命令"}},[a._v("#")]),a._v(" awk命令")]),a._v(" "),s("p",[a._v("AWK 是一种处理文本文件的语言，是一个强大的文本分析工具。")]),a._v(" "),s("p",[a._v("之所以叫 AWK 是因为其取了三位创始人 Alfred Aho，Peter Weinberger, 和 Brian Kernighan 的 Family Name 的首字符。")]),a._v(" "),s("p",[a._v("语法")]),a._v(" "),s("div",{staticClass:"language-linux line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("awk [选项参数] 'script' var=value file(s)\n或\nawk [选项参数] -f scriptfile var=value file(s)\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[s("a",{attrs:{href:"https://www.runoob.com/linux/linux-comm-awk.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("菜鸟教程awk命令"),s("OutboundLink")],1)]),a._v(" "),s("h2",{attrs:{id:"五-linux用户组管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五-linux用户组管理"}},[a._v("#")]),a._v(" 五 Linux用户组管理")]),a._v(" "),s("ol",[s("li",[a._v("查看用户账号文件―>/etc/passwd，说明其一行的格式及各域作用")]),a._v(" "),s("li",[a._v("查看影子文件―>/etc/shadow，说明其中一行的格式及各域作用")]),a._v(" "),s("li",[a._v("查看组文件―>/etc/group，说明其中一行的格式及各域作用")])]),a._v(" "),s("h3",{attrs:{id:"用户相关命令练习"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用户相关命令练习"}},[a._v("#")]),a._v(" 用户相关命令练习")]),a._v(" "),s("ol",[s("li",[a._v("练习添加新用户命令：useradd；")]),a._v(" "),s("li",[a._v("练习设置用户口令命令：passwd；")]),a._v(" "),s("li",[a._v("练习切换用户身份命令：su；")]),a._v(" "),s("li",[a._v("练习删除用户命令：userdel；")]),a._v(" "),s("li",[a._v("练习修改用户信息命令：usermod；")])]),a._v(" "),s("h3",{attrs:{id:"组相关命令练习"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组相关命令练习"}},[a._v("#")]),a._v(" 组相关命令练习")]),a._v(" "),s("ol",[s("li",[a._v("练习添加组命令：groupadd；")]),a._v(" "),s("li",[a._v("练习删除组命令：groupdel；")]),a._v(" "),s("li",[a._v("练习修改组信息命令：groupmod；")]),a._v(" "),s("li",[a._v("添加/删除组成员：gpasswd；")])]),a._v(" "),s("h3",{attrs:{id:"文件相关命令练习"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件相关命令练习"}},[a._v("#")]),a._v(" 文件相关命令练习")]),a._v(" "),s("ol",[s("li",[a._v("修改权限命令：chmod")]),a._v(" "),s("li",[a._v("改变文件拥有者：chown；")]),a._v(" "),s("li",[a._v("更改文件所属的组：chgrp；")])]),a._v(" "),s("h3",{attrs:{id:"用户组管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用户组管理"}},[a._v("#")]),a._v(" 用户组管理")]),a._v(" "),s("ol",[s("li",[a._v("建立一个标准的组group1，GID=900；")]),a._v(" "),s("li",[a._v("建立一个标准组group2，选项为默认，观察该组的信息有什么变化；")]),a._v(" "),s("li",[a._v("新建用户ah、xh，再新建一个组group3，把root、u1、user2用户添加到group1组中，把ah、xh添加到group2组，")]),a._v(" "),s("li",[a._v("把group3组改名为g3，GID=1000；")]),a._v(" "),s("li",[a._v("查看user2所属于的组，并记录；")]),a._v(" "),s("li",[a._v("删除user1组与g3组，观察有什么情况发生；")])]),a._v(" "),s("h2",{attrs:{id:"六-linux常用软件安装过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六-linux常用软件安装过程"}},[a._v("#")]),a._v(" 六 Linux常用软件安装过程")]),a._v(" "),s("h3",{attrs:{id:"whereis-which"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#whereis-which"}},[a._v("#")]),a._v(" whereis&which")]),a._v(" "),s("p",[a._v("whereis: 可以帮助快速的找到某个命令的二进制文件、帮助页面、源码所在路径。")]),a._v(" "),s("p",[a._v("which: 也是可以显示命令的二进制文件的路,shows the full path of (shell) commands.")]),a._v(" "),s("h3",{attrs:{id:"systemctl-service-sv-servicename"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#systemctl-service-sv-servicename"}},[a._v("#")]),a._v(" systemctl &service (sv==servicename)")]),a._v(" "),s("p",[a._v("添加开机启动 systemctl enable sv")]),a._v(" "),s("p",[a._v("禁止开机启动 systemctl disable sv")]),a._v(" "),s("p",[a._v("查看服务文件内容 systemctl cat sv")]),a._v(" "),s("p",[a._v("------------------------")]),a._v(" "),s("p",[a._v("立即启动服务 systemctl start sv service sv start")]),a._v(" "),s("p",[a._v("立即停止服务 systemctl stop sv service sv stop")]),a._v(" "),s("p",[a._v("重新启动服务 systemctl restart sv service sv restart")]),a._v(" "),s("p",[a._v("重新加载服务配置 systemctl reload sv service sv reload")]),a._v(" "),s("p",[a._v("查看服务状态 systemctl status sv service sv status")]),a._v(" "),s("h3",{attrs:{id:"查看端口占用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看端口占用"}},[a._v("#")]),a._v(" 查看端口占用")]),a._v(" "),s("p",[a._v("netstat -anp |grep :80 ,不存在 netstat 可 yum install net-tools")]),a._v(" "),s("p",[a._v("或 ss -anp | grep :80")]),a._v(" "),s("h3",{attrs:{id:"防火墙相关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#防火墙相关"}},[a._v("#")]),a._v(" 防火墙相关")]),a._v(" "),s("p",[a._v("开放端口 firewall-cmd --permanent --zone=public --add-port=80/tcp")]),a._v(" "),s("p",[a._v("开放多个端口 firewall-cmd --permanent --zone=public --add-port=8080-8083/tcp")]),a._v(" "),s("p",[a._v("关闭某个端口 firewall-cmd --permanent --zone=public --remove-port=81/tcp")]),a._v(" "),s("p",[a._v("修改后重载配置 firewall-cmd --reload")]),a._v(" "),s("p",[a._v("列出开放的端口 firewall-cmd --list-ports")]),a._v(" "),s("h3",{attrs:{id:"yum相关命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yum相关命令"}},[a._v("#")]),a._v(" yum相关命令")]),a._v(" "),s("p",[a._v("设置yum源 : 参考阿里 或华为镜像中说明")]),a._v(" "),s("p",[a._v("安装 yum install softwarename")]),a._v(" "),s("p",[a._v("卸载 yum remove softwarename")]),a._v(" "),s("p",[a._v("列出所有 yum list package")]),a._v(" "),s("p",[a._v("列出已有 yum list installed")]),a._v(" "),s("p",[a._v("查找 yum serach jdk")]),a._v(" "),s("h3",{attrs:{id:"tar-压缩-解压缩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tar-压缩-解压缩"}},[a._v("#")]),a._v(" tar 压缩/解压缩")]),a._v(" "),s("p",[a._v("对应 .tar 文件：")]),a._v(" "),s("p",[a._v("解包：tar xvf FileName.tar")]),a._v(" "),s("p",[a._v("打包：tar cvf FileName.tar DirName")]),a._v(" "),s("p",[a._v(".tar.gz 和 .tgz文件：")]),a._v(" "),s("p",[a._v("解压：tar -zxvf FileName.tar.gz")]),a._v(" "),s("p",[a._v("压缩：tar -zcvf FileName.tar.gz DirName")]),a._v(" "),s("h3",{attrs:{id:"任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#任务"}},[a._v("#")]),a._v(" 任务")]),a._v(" "),s("p",[a._v("安装apache")]),a._v(" "),s("p",[a._v("安装python3")]),a._v(" "),s("p",[a._v("安装jdk8")]),a._v(" "),s("p",[a._v("安装tomcat")]),a._v(" "),s("p",[a._v("安装nginx")]),a._v(" "),s("p",[a._v("安装MySQL")]),a._v(" "),s("h2",{attrs:{id:"八-linux-进程管理与定时任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#八-linux-进程管理与定时任务"}},[a._v("#")]),a._v(" 八 Linux 进程管理与定时任务")]),a._v(" "),s("h3",{attrs:{id:"静态显示系统进程信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态显示系统进程信息"}},[a._v("#")]),a._v(" 静态显示系统进程信息")]),a._v(" "),s("h4",{attrs:{id:"ps命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ps命令"}},[a._v("#")]),a._v(" ps命令")]),a._v(" "),s("p",[a._v("inux ps （英文全拼：process status）命令用于显示当前进程的状态，类似于 windows 的任务管理器。")]),a._v(" "),s("p",[a._v("语法")]),a._v(" "),s("div",{staticClass:"language-linux line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("ps [options] [--help]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"动态显示系统进程信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态显示系统进程信息"}},[a._v("#")]),a._v(" 动态显示系统进程信息")]),a._v(" "),s("h4",{attrs:{id:"top命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#top命令"}},[a._v("#")]),a._v(" top命令")]),a._v(" "),s("p",[a._v("使用top命令，实时显示系统各个进程的资源占用情况。说明输出信息中列的含意。")]),a._v(" "),s("p",[a._v("在top基本视图中，按h键进入另一个视图。")]),a._v(" "),s("p",[a._v("在top基本视图中，按f键进入另一个视图，在这里可以编辑基本视图中的显示字段。")]),a._v(" "),s("p",[a._v("在top基本视图中，按c键进入另一个视图,可以显示进程的路径。")]),a._v(" "),s("p",[a._v("在top基本视图中，按k键，可以在不退出top命令的情况下杀死某个正在运行的进程。")]),a._v(" "),s("p",[a._v("在top基本视图中，按b键，高亮显示当前正在运行的进程。")]),a._v(" "),s("h3",{attrs:{id:"其他命令练习"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他命令练习"}},[a._v("#")]),a._v(" 其他命令练习")]),a._v(" "),s("ol",[s("li",[a._v("Kill")]),a._v(" "),s("li",[a._v("killall")]),a._v(" "),s("li",[a._v("jobs")]),a._v(" "),s("li",[a._v("fg")]),a._v(" "),s("li",[a._v("bg")]),a._v(" "),s("li",[a._v("nice")]),a._v(" "),s("li",[a._v("renice")])]),a._v(" "),s("h3",{attrs:{id:"定时任务练习"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定时任务练习"}},[a._v("#")]),a._v(" 定时任务练习")]),a._v(" "),s("h4",{attrs:{id:"定时任务1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定时任务1"}},[a._v("#")]),a._v(" 定时任务1")]),a._v(" "),s("p",[a._v("利用at设置一个任务自动化，在当天11：00钟，在根目录下自动创建一个abc目录，并进入到abc目录中，建立一个空的文件test，同时对该文件进行打包成test.tar;")]),a._v(" "),s("h4",{attrs:{id:"定时任务2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定时任务2"}},[a._v("#")]),a._v(" 定时任务2")]),a._v(" "),s("p",[a._v("Cron应用：每周2,4,6早上3点重新启动系统")]),a._v(" "),s("p",[a._v("题目6 –\n请回答如下问题：")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("什么是进程？\n一般来讲，进程定义为正在运行的程序的实例，简单地说，进程就是一个正在运行的程序。程序被触发后，运行者的权限与属性、程序的程序码与所需数据等都会被加载内存中， 操作系统并给予这个内存内的单元一个识别码 (PID)，可以说，进程就是一个正在运行中的程序。")])]),a._v(" "),s("li",[s("p",[a._v("进程与程序的区别？\n程序：通常为二进制，放置在储存媒体中 (如硬盘、光盘、软盘、磁带等)， 为实体文件的型态存在；\n进程：程序被触发后，运行者的权限与属性、程序的程序码与所需数据等都会被加载内存中， 操作系统并给予这个内存内的单元一个识别码 (PID)，可以说，进程就是一个正在运行中的程序。")])]),a._v(" "),s("li",[s("p",[a._v("进程的三种状态？\n运行态：进程占有CPU且正在运行；\n就绪态：进程具备运行状态，等待系统分配CPU以便运行；\n等待态：又叫阻塞态或睡眠态，指进程不具备运行条件，正在等待某个事件的完成；")])]),a._v(" "),s("li",[s("p",[a._v("如何后台启动进程")])])]),a._v(" "),s("ol",[s("li",[s("p",[a._v("Nohup")])]),a._v(" "),s("li",[s("p",[a._v("Setsid")])]),a._v(" "),s("li",[s("p",[a._v("Subshell")])])]),a._v(" "),s("h2",{attrs:{id:"九-linux-下-gcc-的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#九-linux-下-gcc-的使用"}},[a._v("#")]),a._v(" 九 Linux 下 GCC 的使用")]),a._v(" "),s("h3",{attrs:{id:"gcc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gcc"}},[a._v("#")]),a._v(" gcc")]),a._v(" "),s("p",[a._v("-o：指定生成文件的名称")]),a._v(" "),s("p",[a._v("-E：激活预处理。生成预处理文件（ .i 文件）")]),a._v(" "),s("p",[a._v("-S：激活预处理、编译。生成汇编代码（ .s 文件）")]),a._v(" "),s("p",[a._v("-c：激活预处理、编译、汇编。生成目标文件（ .o 文件）")]),a._v(" "),s("p",[a._v("-I：指定头文件目录")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://shinoimg.yyshino.top/img/202305092351782.png",alt:"image-20230509235123641"}})]),a._v(" "),s("h3",{attrs:{id:"预处理（编译）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预处理（编译）"}},[a._v("#")]),a._v(" 预处理（编译）")]),a._v(" "),s("p",[a._v("使编译器将 C 源代码中的包含的头文件如stdio.h编译进来，替换宏(如符号常量)。")]),a._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("gcc "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-E")]),a._v(" hello.c "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" hello.i \n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" hello.i\t查看生成文件\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编译"}},[a._v("#")]),a._v(" 编译")]),a._v(" "),s("p",[a._v("GCC 首先要检查代码的规范性、是否有语法错误等，以确定代码的实际要做的工作，在检查无误后，GCC 把代码翻译成汇编语言。")]),a._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("gcc –S hello.i –o  hello.s "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#进行到编译阶段停止，并生成 汇编文件 ")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" hello.s "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看生成的文件")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"汇编"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#汇编"}},[a._v("#")]),a._v(" 汇编")]),a._v(" "),s("p",[a._v("把编译阶段生成的 ”.s” 文件转成二进制目标代码。")]),a._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("gcc –c hello.s –o hello.o\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" 查看文件\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"链接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#链接"}},[a._v("#")]),a._v(" 链接")]),a._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 1)\t链接到库中(链接其他目标文件)，生成可执行文件。")]),a._v("\ngcc hello.o –o hello.out\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 2)\t执行文件")]),a._v("\n./hello.out\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h3",{attrs:{id:"一次性完成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一次性完成"}},[a._v("#")]),a._v(" 一次性完成")]),a._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 输入命令，可以一次性完成上述步骤")]),a._v("\ngcc hello.c "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" hello3.out\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 运行编译后的可执行程序./hello")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h3",{attrs:{id:"多个文件编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多个文件编译"}},[a._v("#")]),a._v(" 多个文件编译")]),a._v(" "),s("p",[a._v("现在有 3 个文件，分别是 main.c，print.c，print.h")]),a._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#1）多个文件一起编译：")]),a._v("\ngcc print.c main.c "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" main_print\n执行生成文件\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#2）分别编译各个源文件，再对编译后输出的目标文件（.o）链接")]),a._v("\ngcc "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" print.c "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" print.o\ngcc "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" main.c "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" main.o\ngcc print.o main.o "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" main_print\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#执行生成文件")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br")])]),s("p",[a._v("如果头文件和源文件不在一同目录中，如何解决？")]),a._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 头文件所在目录：myInclude")]),a._v("\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 主要是要加 -I 指定头文件目录：")]),a._v("\ngcc print.c main.c "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" main_print "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-I")]),a._v(" myInclude\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 运行文件")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"makefile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#makefile"}},[a._v("#")]),a._v(" makefile")]),a._v(" "),s("p",[a._v("在使用gcc命令时，一个工程又有多个文件（比如100个文件），如果按照上述编译方法，往往需要输入很多指令，而且修改文件也不方便，因此引入makefile文件解决该问题。")]),a._v(" "),s("h3",{attrs:{id:"父子进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#父子进程"}},[a._v("#")]),a._v(" 父子进程")]),a._v(" "),s("p",[a._v("使用fork创建子进程，功能是：\n父进程输出main,子进程输出child\n使用gcc编译，并运行\n注意事项\n查看一个函数功能的方法：man fork\n需要包含的头文件：#include <unistd.h>\nfork返回值\n成功时，父进程返回子进程的进程ID号；子进程返回0。\n失败时，父进程返回-1，子进程创建失败。")]),a._v(" "),s("h2",{attrs:{id:"十-linux-shell程序设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十-linux-shell程序设计"}},[a._v("#")]),a._v(" 十 LInux Shell程序设计")]),a._v(" "),s("h3",{attrs:{id:"变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[a._v("#")]),a._v(" 变量")]),a._v(" "),s("h4",{attrs:{id:"定义变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义变量"}},[a._v("#")]),a._v(" 定义变量")]),a._v(" "),s("p",[a._v("定义变量时，变量名不加美元符号（$，PHP语言中变量需要），如：")]),a._v(" "),s("p",[a._v('your_name="runoob.com"')]),a._v(" "),s("p",[a._v("注意，变量名和等号之间不能有空格，这可能和你熟悉的所有编程语言都不一样。同时，变量名的命名须遵循如下规则：")]),a._v(" "),s("ul",[s("li",[a._v("命名只能使用英文字母，数字和下划线，首个字符不能以数字开头。")]),a._v(" "),s("li",[a._v("中间不能有空格，可以使用下划线 "),s("strong",[a._v("_")]),a._v("。")]),a._v(" "),s("li",[a._v("不能使用标点符号。")]),a._v(" "),s("li",[a._v("不能使用bash里的关键字（可用help命令查看保留关键字）。")])]),a._v(" "),s("h4",{attrs:{id:"使用变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用变量"}},[a._v("#")]),a._v(" 使用变量")]),a._v(" "),s("p",[a._v("使用一个定义过的变量，只要在变量名前面加美元符号即可")]),a._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("your_name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"qinjx"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$your_name")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${your_name}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("变量名外面的花括号是可选的，加不加都行，加花括号是为了帮助解释器识别变量的边界，比如下面这种情况：")]),a._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[a._v("skill")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" Ada Coffe Action Java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"I am good at '),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${skill}")]),a._v('Script"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h4",{attrs:{id:"只读变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#只读变量"}},[a._v("#")]),a._v(" 只读变量")]),a._v(" "),s("p",[a._v("使用 readonly 命令可以将变量定义为只读变量，只读变量的值不能被改变。")]),a._v(" "),s("p",[a._v("下面的例子尝试更改只读变量，结果报错：")]),a._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[a._v("#!/bin/bash")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("myUrl")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"https://www.google.com"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("readonly")]),a._v(" myUrl\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h4",{attrs:{id:"删除变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除变量"}},[a._v("#")]),a._v(" 删除变量")]),a._v(" "),s("p",[a._v("使用 unset 命令可以删除变量。语法：")]),a._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("unset")]),a._v(" variable_name\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"特定变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特定变量"}},[a._v("#")]),a._v(" 特定变量")]),a._v(" "),s("h3",{attrs:{id:"if语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#if语句"}},[a._v("#")]),a._v(" if语句")]),a._v(" "),s("h3",{attrs:{id:"两数求和"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#两数求和"}},[a._v("#")]),a._v(" 两数求和")]),a._v(" "),s("h3",{attrs:{id:"删除文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除文件"}},[a._v("#")]),a._v(" 删除文件")]),a._v(" "),s("h3",{attrs:{id:"求所有参数的和"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#求所有参数的和"}},[a._v("#")]),a._v(" 求所有参数的和")]),a._v(" "),s("h3",{attrs:{id:"求1-100的和"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#求1-100的和"}},[a._v("#")]),a._v(" 求1-100的和")]),a._v(" "),s("h3",{attrs:{id:"统计文件数量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#统计文件数量"}},[a._v("#")]),a._v(" 统计文件数量")])])}),[],!1,null,null,null);s.default=e.exports}}]);