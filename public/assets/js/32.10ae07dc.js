(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{623:function(t,a,s){"use strict";s.r(a);var v=s(1),_=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"选填"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选填"}},[t._v("#")]),t._v(" 选填")]),t._v(" "),a("h3",{attrs:{id:"常识题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常识题"}},[t._v("#")]),t._v(" 常识题")]),t._v(" "),a("p",[t._v("Linux操作系统的创始人和主要设计者是 "),a("strong",[t._v("Linus Torvalds")])]),t._v(" "),a("p",[t._v("LInux内核遵循 GPL 许可条例。")]),t._v(" "),a("h3",{attrs:{id:"linux联机帮助命令-man"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux联机帮助命令-man"}},[t._v("#")]),t._v(" Linux联机帮助命令 "),a("code",[t._v("man")])]),t._v(" "),a("p",[t._v("你可以使用 "),a("em",[t._v("man [命令]")]),t._v(" 来查看各个命令的使用文档，如 ：man cp。")]),t._v(" "),a("h3",{attrs:{id:"grep命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grep命令"}},[t._v("#")]),t._v(" grep命令")]),t._v(" "),a("p",[t._v("Linux grep (global regular expression) 命令用于"),a("strong",[t._v("查找文件里符合条件的字符串或正则表达式。")])]),t._v(" "),a("h3",{attrs:{id:"一行内运行多个命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一行内运行多个命令"}},[t._v("#")]),t._v(" 一行内运行多个命令")]),t._v(" "),a("p",[t._v("在Linux中，有三种方法可以在一行中运行多个命令:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("示例")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v(";")])]),t._v(" "),a("td",[a("code",[t._v("Command 1;Command 2")])]),t._v(" "),a("td",[t._v("首先运行Command1，"),a("strong",[t._v("然后")]),t._v("运行Command2")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("&&")])]),t._v(" "),a("td",[a("code",[t._v("Command 1 && Command 2")])]),t._v(" "),a("td",[t._v("当Command1"),a("strong",[t._v("运行成功")]),t._v("并结束，然后运行Command2")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("||")])]),t._v(" "),a("td",[a("code",[t._v("Command 1 || Command 2")])]),t._v(" "),a("td",[t._v("当Command1"),a("strong",[t._v("运行失败")]),t._v("时才运行Command2")])])])]),t._v(" "),a("h3",{attrs:{id:"shell中的几种标准输出重定向方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shell中的几种标准输出重定向方式"}},[t._v("#")]),t._v(" shell中的几种标准输出重定向方式")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("命令")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("command > file")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将输出重定向到 file。"),a("strong",[t._v("注意")]),t._v("任何file内的已经存在的内容将被新内容"),a("strong",[t._v("替代")]),t._v("。如果要将新内容添加在文件末尾，请使用>>操作符。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("command < file")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将输入重定向到 file。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("command >> file")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将输出以追加的方式重定向到 file。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("n > file")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将文件描述符为 n 的文件重定向到 file。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("n >> file")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将文件描述符为 n 的文件以追加的方式重定向到 file。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("n >& m")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将输出文件 m 和 n 合并。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("n <& m")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将输入文件 m 和 n 合并。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("<< tag")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将开始标记 tag 和结束标记 tag 之间的内容作为输入。")])])])]),t._v(" "),a("h3",{attrs:{id:"文件的访问权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件的访问权限"}},[t._v("#")]),t._v(" 文件的访问权限")]),t._v(" "),a("p",[t._v("在 Linux 中第一个字符代表这个文件是目录、文件或链接文件等等。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("当为 d 则是目录")])]),t._v(" "),a("li",[a("strong",[t._v("当为 - 则是文件；")])]),t._v(" "),a("li",[a("strong",[t._v("若是 l 则表示为链接文档(link file)；")])]),t._v(" "),a("li",[t._v("若是 "),a("strong",[t._v("b")]),t._v(" 则表示为装置文件里面的可供储存的接口设备(可随机存取装置)；")]),t._v(" "),a("li",[t._v("若是 "),a("strong",[t._v("c")]),t._v(" 则表示为装置文件里面的串行端口设备，例如键盘、鼠标(一次性读取装置)。")])]),t._v(" "),a("p",[t._v("接下来的字符中，以三个为一组，且均为 "),a("strong",[t._v("rwx")]),t._v(" 的三个参数的组合。其中， "),a("strong",[t._v("r")]),t._v(" 代表可读(read)、 "),a("strong",[t._v("w")]),t._v(" 代表可写(write)、 "),a("strong",[t._v("x")]),t._v(" 代表可执行(execute)。 要注意的是，这三个权限的位置不会改变，如果没有权限，就会出现减号 "),a("strong",[t._v("-")]),t._v(" 而已。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://shinoimg.yyshino.top/img/202305121545561.jpeg",alt:"img"}})]),t._v(" "),a("h4",{attrs:{id:"十位权限表示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十位权限表示"}},[t._v("#")]),t._v(" 十位权限表示")]),t._v(" "),a("p",[t._v("常见的权限表示形式有：")]),t._v(" "),a("p",[t._v("每个文件的属性由左边第一部分的 10 个字符来确定（如下图）。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://shinoimg.yyshino.top/img/202305121546416.png",alt:"363003_1227493859FdXT"}})]),t._v(" "),a("p",[t._v("从左至右用 "),a("strong",[t._v("0-9")]),t._v(" 这些数字来表示。")]),t._v(" "),a("p",[t._v("第 "),a("strong",[t._v("0")]),t._v(" 位确定文件类型")]),t._v(" "),a("p",[t._v("第 "),a("strong",[t._v("1-3")]),t._v(" 位确定"),a("strong",[t._v("属主")]),t._v("（该文件的所有者）拥有该文件的权限。")]),t._v(" "),a("p",[t._v("第"),a("strong",[t._v("4-6")]),t._v("位确定"),a("strong",[t._v("属组")]),t._v("（所有者的同组用户）拥有该文件的权限，")]),t._v(" "),a("p",[t._v("第"),a("strong",[t._v("7-9")]),t._v("位确定"),a("strong",[t._v("其他用户")]),t._v("拥有该文件的权限。")]),t._v(" "),a("p",[t._v("其中，第 "),a("strong",[t._v("1、4、7")]),t._v(" 位表示读权限，如果用 "),a("strong",[t._v("r")]),t._v(" 字符表示，则有读权限，如果用 "),a("strong",[t._v("-")]),t._v(" 字符表示，则没有读权限；第 "),a("strong",[t._v("2、5、8")]),t._v(" 位表示写权限，如果用 "),a("strong",[t._v("w")]),t._v(" 字符表示，则有写权限，如果用 "),a("strong",[t._v("-")]),t._v(" 字符表示没有写权限；第 "),a("strong",[t._v("3、6、9")]),t._v(" 位表示可执行权限，如果用 "),a("strong",[t._v("x")]),t._v(" 字符表示，则有执行权限，如果用 "),a("strong",[t._v("-")]),t._v(" 字符表示，则没有执行权限。")]),t._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("示例：\n-rw------- (600)    只有拥有者有读写权限。\n-rw-r--r-- (644)    只有拥有者有读写权限；而属组用户和其他用户只有读权限。\n-rwx------ (700)    只有拥有者有读、写、执行权限。\n-rwxr-xr-x (755)    拥有者有读、写、执行权限；而属组用户和其他用户只有读、执行权限。\n-rwx--x--x (711)    拥有者有读、写、执行权限；而属组用户和其他用户只有执行权限。\n-rw-rw-rw- (666)    所有用户都有文件读、写权限。\n-rwxrwxrwx (777)    所有用户都有读、写、执行权限。\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h3",{attrs:{id:"新建文件的默认权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新建文件的默认权限"}},[t._v("#")]),t._v(" 新建文件的默认权限")]),t._v(" "),a("p",[t._v("当新建一个文件或目录时,系统会为其设置最初的权限。文件的初始权限由文件创建掩码(creation mask)决定。掩码是一个9位二进制数字，通常用八进制数字表示，如022。掩码中的位与权限字符串相对应,掩码中为1的位限制对应的权限位的权限。例如,"),a("strong",[t._v("掩码022 表示组用户和其他人没有 w 权限,对其他权限不做限制。")]),t._v("\n文件创建时的默认权限有以下几种情况:")]),t._v(" "),a("ul",[a("li",[t._v("可执行文件：通过编译程序生成的可执行文件,它的默认权限是 777-掩码。例如，若掩码为 022,则新文件的权限就是 755。")]),t._v(" "),a("li",[t._v("非可执行文件：对于非可执行文件(如文本文件、数据文件等),在创建时默认是没有x权限的,对这类文件的x权限需要显式地赋予，即通过 chmod 命令将其改为可执行文件。因此新建文件的权限是"),a("code",[t._v("(777-掩码)&666")]),t._v("。这里的是“按位与”运算，即先用"),a("code",[t._v("777-掩码")]),t._v("求出权限,再滤掉所有 x 位。例如,若掩码为 022,则新文件的权限就是 "),a("code",[t._v("(777-022)& 666 = 644")]),t._v("。若掩码为 003,则新文件的权限就是"),a("code",[t._v("(777-003)&666=664")]),t._v("。")]),t._v(" "),a("li",[t._v("目录：同可执行文件一样,新建目录的默认权限是 777-掩码。若掩码为 022,则新目录的权限就是 755。")])]),t._v(" "),a("p",[t._v("用户登录时,系统自动地为其设置了掩码,通常是 022。用户可以用命令修改掩码从而改变新建文件的默认权限,使之具有合适的安全性限制。")]),t._v(" "),a("h4",{attrs:{id:"文件的其他属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件的其他属性"}},[t._v("#")]),t._v(" 文件的其他属性")]),t._v(" "),a("p",[t._v("除了文件名、文件类型、归属关系和存取权限外,文件还有其他一些属性,包括")]),t._v(" "),a("ol",[a("li",[t._v("文件的时间标签，用于记录文件的时间属性，分为:\n"),a("ul",[a("li",[t._v("修改时间(modify time):文件内容被修改的最后时间")]),t._v(" "),a("li",[t._v("访问时间(access time):文件最近一次被访问的时间")]),t._v(" "),a("li",[t._v("变更时间(change time):文件属性变更的最近时间。")])])]),t._v(" "),a("li",[t._v("文件的大小,即文件所占用的字节数。")]),t._v(" "),a("li",[t._v("文件的连接数,即此文件硬链接的数目。")])]),t._v(" "),a("h2",{attrs:{id:"实验命令整理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实验命令整理"}},[t._v("#")]),t._v(" 实验命令整理")]),t._v(" "),a("h3",{attrs:{id:"熟悉目录以及文件相关命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#熟悉目录以及文件相关命令"}},[t._v("#")]),t._v(" 熟悉目录以及文件相关命令")]),t._v(" "),a("p",[a("code",[t._v("cd")]),t._v("、"),a("code",[t._v("pwd")]),t._v("、"),a("code",[t._v("ls")]),t._v("、"),a("code",[t._v("mkdir")]),t._v("、"),a("code",[t._v("rmdir")]),t._v("、"),a("code",[t._v("rm")])]),t._v(" "),a("p",[t._v("说明：  mkdir 的-p选项使用场景；")]),t._v(" "),a("p",[t._v("说明：  rm -rf 的使用场景")]),t._v(" "),a("p",[t._v("说明：  ls -al ，ls /etc | more 的作用")]),t._v(" "),a("p",[t._v("文件显示："),a("code",[t._v("cat")]),t._v("、"),a("code",[t._v("more")]),t._v("、"),a("code",[t._v("less")])]),t._v(" "),a("p",[t._v("文件复制、删除和移动：cp、rm、mv")]),t._v(" "),a("p",[t._v("创建或改变文件时间标签：touch")]),t._v(" "),a("h3",{attrs:{id:"熟练运行通配符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#熟练运行通配符"}},[t._v("#")]),t._v(" 熟练运行通配符")]),t._v(" "),a("p",[t._v("基于ls命令练习通配符（？、*、[]）的使用")]),t._v(" "),a("ol",[a("li",[t._v("在当前目录下生成 touch t{1..10}.c 文件")]),t._v(" "),a("li",[t._v("ls *.c 作用")]),t._v(" "),a("li",[t._v("ls  ??.c作用")]),t._v(" "),a("li",[t._v("ls t[1-5].c 的作用")])]),t._v(" "),a("h3",{attrs:{id:"统计查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#统计查询"}},[t._v("#")]),t._v(" 统计查询")]),t._v(" "),a("p",[t._v("find、wc、sort、")]),t._v(" "),a("p",[t._v("cat、tee、last")]),t._v(" "),a("h4",{attrs:{id:"find命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#find命令"}},[t._v("#")]),t._v(" find命令")]),t._v(" "),a("p",[t._v("Linux find 命令用于在指定目录下查找文件和目录。")]),t._v(" "),a("h4",{attrs:{id:"wc命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wc命令"}},[t._v("#")]),t._v(" wc命令")]),t._v(" "),a("p",[t._v("Linux wc命令用于计算字数。")]),t._v(" "),a("p",[t._v('利用wc指令我们可以计算文件的Byte数、字数、或是列数，若不指定文件名称、或是所给予的文件名为"-"，则wc指令会从标准输入设备读取数据。')]),t._v(" "),a("h4",{attrs:{id:"sort命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sort命令"}},[t._v("#")]),t._v(" sort命令")]),t._v(" "),a("p",[t._v("Linux sort 命令用于将文本文件内容加以排序。")]),t._v(" "),a("p",[t._v("sort 可针对文本文件的内容，以行为单位来排序。")]),t._v(" "),a("h4",{attrs:{id:"重定向管道的输出到标准输出和指定的文件中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重定向管道的输出到标准输出和指定的文件中"}},[t._v("#")]),t._v(" 重定向管道的输出到标准输出和指定的文件中")]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("tee")]),t._v("命令")]),t._v(" "),a("p",[t._v("如果您只关心标准输出")]),t._v(" "),a("div",{staticClass:"language-cmd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 如果想同时打印到屏幕和文件里，可以这么写：\nls -l | tee -a lsls.log\n# 如果想把错误输出也同时打印到屏幕和文件，可以这么写：\nls -l not_find_runoob 2>&1 | tee -a lsls.log\n# 其中，2>&1 意思就是把标准报错也作为标准输出。写 crontab job 的时候常用。\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h4",{attrs:{id:"cat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cat"}},[t._v("#")]),t._v(" cat")]),t._v(" "),a("p",[t._v("查看当前文件内容")]),t._v(" "),a("h4",{attrs:{id:"tar-压缩-解压缩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tar-压缩-解压缩"}},[t._v("#")]),t._v(" tar 压缩/解压缩")]),t._v(" "),a("p",[t._v("对应 .tar 文件：")]),t._v(" "),a("p",[t._v("解包：tar xvf FileName.tar")]),t._v(" "),a("p",[t._v("打包：tar cvf FileName.tar DirName")]),t._v(" "),a("p",[t._v(".tar.gz 和 .tgz文件：")]),t._v(" "),a("p",[t._v("解压：tar -zxvf FileName.tar.gz")]),t._v(" "),a("p",[t._v("压缩：tar -zcvf FileName.tar.gz DirName")]),t._v(" "),a("h3",{attrs:{id:"vi编辑器的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vi编辑器的使用"}},[t._v("#")]),t._v(" vi编辑器的使用")]),t._v(" "),a("p",[t._v("打开文件：vi [文件名]")]),t._v(" "),a("p",[a("strong",[t._v("命令模式（Command mode）：输入字符都作为命令来解释执行。不显示输入内容。")])]),t._v(" "),a("p",[a("strong",[t._v("输入模式（Insert mode）：输入的任何字符都将作为文件内容被保存，并显示在屏幕上。")])]),t._v(" "),a("p",[a("strong",[t._v("末行模式（Last line mode）：在屏幕最末行接收行命令输入，并执行。")])]),t._v(" "),a("p",[t._v("练习3种工模间的切换")]),t._v(" "),a("h4",{attrs:{id:"退出相关命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#退出相关命令"}},[t._v("#")]),t._v(" 退出相关命令")]),t._v(" "),a("p",[a("code",[t._v(":q")]),t._v("、"),a("code",[t._v(":wq")]),t._v("、"),a("code",[t._v(":q!")])]),t._v(" "),a("h4",{attrs:{id:"增删查改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#增删查改"}},[t._v("#")]),t._v(" 增删查改")]),t._v(" "),a("p",[t._v("iao、dd、dw、x")]),t._v(" "),a("h4",{attrs:{id:"修改-替换命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改-替换命令"}},[t._v("#")]),t._v(" 修改/替换命令")]),t._v(" "),a("p",[t._v("😒/str1/str2/ 用字符串 str2 替换行中首次出现的字符串 str1")]),t._v(" "),a("p",[t._v("😒/str1/str2/g 用字符串 str2 替换行中所有出现的字符串 str1")]),t._v(" "),a("p",[t._v(":%s/str1/str2/g 用字符串 str2 替换所有行中，所有出现的字符串 str1")]),t._v(" "),a("h4",{attrs:{id:"复制与撤销"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复制与撤销"}},[t._v("#")]),t._v(" 复制与撤销")]),t._v(" "),a("p",[a("code",[t._v("y")]),t._v("、"),a("code",[t._v("p")]),t._v("、"),a("code",[t._v("J")]),t._v("、"),a("code",[t._v("u")]),t._v("、"),a("code",[t._v("Ctrl r")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("命令")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("y1G")]),t._v(" "),a("td",[t._v("复制游标所在行到第一行的所有数据")])]),t._v(" "),a("tr",[a("td",[t._v("yG")]),t._v(" "),a("td",[t._v("复制游标所在行到最后一行的所有数据")])]),t._v(" "),a("tr",[a("td",[t._v("y0")]),t._v(" "),a("td",[t._v("复制光标所在的那个字符到该行行首的所有数据")])]),t._v(" "),a("tr",[a("td",[t._v("y$")]),t._v(" "),a("td",[t._v("复制光标所在的那个字符到该行行尾的所有数据")])]),t._v(" "),a("tr",[a("td",[t._v("p, P")]),t._v(" "),a("td",[t._v("p 为将已复制的数据在光标下一行贴上，P 则为贴在游标上一行！ 举例来说，我目前光标在第 20 行，且已经复制了 10 行数据。则按下 p 后， 那 10 行数据会贴在原本的 20 行之后，亦即由 21 行开始贴。但如果是按下 P 呢？ 那么原本的第 20 行会被推到变成 30 行。 (常用)")])]),t._v(" "),a("tr",[a("td",[t._v("J")]),t._v(" "),a("td",[t._v("将光标所在行与下一行的数据结合成同一行")])]),t._v(" "),a("tr",[a("td",[t._v("c")]),t._v(" "),a("td",[t._v("重复删除多个数据，例如向下删除 10 行，[ 10cj ]")])]),t._v(" "),a("tr",[a("td",[t._v("u")]),t._v(" "),a("td",[t._v("复原前一个动作。(常用)")])]),t._v(" "),a("tr",[a("td",[t._v("[Ctrl]+r")]),t._v(" "),a("td",[t._v("重做上一个动作。(常用)")])]),t._v(" "),a("tr",[a("td",[t._v("这个 u 与 [Ctrl]+r 是很常用的指令！一个是复原，另一个则是重做一次～ 利用这两个功能按键，你的编辑，嘿嘿！很快乐的啦！")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v(".")]),t._v(" "),a("td",[t._v("不要怀疑！这就是小数点！意思是重复前一个动作的意思。 如果你想要重复删除、重复贴上等等动作，按下小数点『.』就好了！ (常用)")])])])]),t._v(" "),a("h3",{attrs:{id:"用户管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用户管理"}},[t._v("#")]),t._v(" 用户管理")]),t._v(" "),a("p",[t._v("用户相关文件")]),t._v(" "),a("p",[a("code",[t._v("/ect/passwd")]),t._v(" "),a("code",[t._v("etc/shadow")]),t._v(" "),a("code",[t._v("/etc/group")])]),t._v(" "),a("p",[t._v("查看用户账号文件―>/etc/passwd，说明其一行的格式及各域作用")]),t._v(" "),a("div",{staticClass:"language-cmd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录Shell\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("查看影子文件―>/etc/shadow，说明其中一行的格式及各域作用")]),t._v(" "),a("div",{staticClass:"language-cmd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:失效时间:标志\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("查看组文件―>/etc/group，说明其中一行的格式及各域作用")]),t._v(" "),a("div",{staticClass:"language-cmd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("组名:口令:组标识号:组内用户列表\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"用户相关命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用户相关命令"}},[t._v("#")]),t._v(" 用户相关命令")]),t._v(" "),a("p",[a("code",[t._v("useradd")]),t._v(" "),a("code",[t._v("passwd")]),t._v(" "),a("code",[t._v("su")]),t._v(" "),a("code",[t._v("userdel")]),t._v(" "),a("code",[t._v("usermod")])]),t._v(" "),a("ol",[a("li",[t._v("练习添加新用户命令：useradd；")]),t._v(" "),a("li",[t._v("练习设置用户口令命令：passwd；")]),t._v(" "),a("li",[t._v("练习切换用户身份命令：su；")]),t._v(" "),a("li",[t._v("练习删除用户命令：userdel；")]),t._v(" "),a("li",[t._v("练习修改用户信息命令：usermod；")])]),t._v(" "),a("h4",{attrs:{id:"组相关命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组相关命令"}},[t._v("#")]),t._v(" 组相关命令")]),t._v(" "),a("p",[a("code",[t._v("groupadd")]),t._v(" "),a("code",[t._v("groupdel")]),t._v(" "),a("code",[t._v("groupmod")]),t._v(" "),a("code",[t._v("gpasswd")])]),t._v(" "),a("ol",[a("li",[t._v("练习添加组命令：groupadd；")]),t._v(" "),a("li",[t._v("练习删除组命令：groupdel；")]),t._v(" "),a("li",[t._v("练习修改组信息命令：groupmod；")]),t._v(" "),a("li",[t._v("添加/删除组成员：gpasswd；")])]),t._v(" "),a("h4",{attrs:{id:"文件相关命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件相关命令"}},[t._v("#")]),t._v(" 文件相关命令")]),t._v(" "),a("p",[a("code",[t._v("chmod")]),t._v(" "),a("code",[t._v("chown")]),t._v(" "),a("code",[t._v("chgrp")])]),t._v(" "),a("ol",[a("li",[t._v("修改权限命令：chmod")]),t._v(" "),a("li",[t._v("改变文件拥有者：chown；")]),t._v(" "),a("li",[t._v("更改文件所属的组：chgrp；")])]),t._v(" "),a("h3",{attrs:{id:"进程管理与定时任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程管理与定时任务"}},[t._v("#")]),t._v(" 进程管理与定时任务")]),t._v(" "),a("p",[a("code",[t._v("ps")]),t._v(" "),a("code",[t._v("top")])]),t._v(" "),a("p",[a("code",[t._v("kill")]),t._v(" "),a("code",[t._v("killall")]),t._v(" "),a("code",[t._v("jobs")]),t._v(" "),a("code",[t._v("fg")]),t._v(" "),a("code",[t._v("bg")]),t._v(" "),a("code",[t._v("nice")]),t._v(" "),a("code",[t._v("renice")])]),t._v(" "),a("p",[t._v("使用top命令，实时显示系统各个进程的资源占用情况。说明输出信息中列的含意。")]),t._v(" "),a("p",[t._v("在top基本视图中，按h键进入另一个视图。")]),t._v(" "),a("p",[t._v("在top基本视图中，按f键进入另一个视图，在这里可以编辑基本视图中的显示字段。")]),t._v(" "),a("p",[t._v("在top基本视图中，按c键进入另一个视图,可以显示进程的路径。")]),t._v(" "),a("p",[t._v("在top基本视图中，按k键，可以在不退出top命令的情况下杀死某个正在运行的进程。")]),t._v(" "),a("p",[t._v("在top基本视图中，按b键，高亮显示当前正在运行的进程。")]),t._v(" "),a("h2",{attrs:{id:"简答题："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简答题："}},[t._v("#")]),t._v(" 简答题：")]),t._v(" "),a("h3",{attrs:{id:"什么是进程？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是进程？"}},[t._v("#")]),t._v(" 什么是进程？")]),t._v(" "),a("p",[t._v("进程（process）是一个可并发执行的程序在一个数据集上的一次运行。（就是程序的一次运行过程）")]),t._v(" "),a("h3",{attrs:{id:"进程与程序的区别？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程与程序的区别？"}},[t._v("#")]),t._v(" 进程与程序的区别？")]),t._v(" "),a("ul",[a("li",[t._v("程序是静态的概念，进程是动态的概念")]),t._v(" "),a("li",[t._v("程序可长期保存，进程有生命期和状态")]),t._v(" "),a("li",[t._v("进程包括程序，不同进程可对应同一程序代码")])]),t._v(" "),a("h3",{attrs:{id:"进程的三种状态？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程的三种状态？"}},[t._v("#")]),t._v(" 进程的三种状态？")]),t._v(" "),a("ul",[a("li",[t._v("运行态：进程占有CPU且正在运行；")]),t._v(" "),a("li",[t._v("就绪态：进程具备运行状态，等待系统分配CPU以便运行；")]),t._v(" "),a("li",[t._v("等待态：又叫阻塞态或睡眠态，指进程不具备运行条件，正在等待某个事件的完成；")])]),t._v(" "),a("h3",{attrs:{id:"如何后台启动进程？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何后台启动进程？"}},[t._v("#")]),t._v(" 如何后台启动进程？")]),t._v(" "),a("ul",[a("li",[t._v("在执行的命令后添加"),a("code",[t._v("$")]),t._v("符号")])]),t._v(" "),a("h3",{attrs:{id:"fork函数的特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fork函数的特点"}},[t._v("#")]),t._v(" fork函数的特点")]),t._v(" "),a("ul",[a("li",[t._v("一次调用，两次返回")]),t._v(" "),a("li",[t._v("父进程输出main,子进程输出child")]),t._v(" "),a("li",[t._v("使用gcc编译，并运行")]),t._v(" "),a("li",[a("code",[t._v("fork()")]),t._v("系统调用，创建一个新的子进程")])]),t._v(" "),a("h2",{attrs:{id:"编程题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编程题"}},[t._v("#")]),t._v(" 编程题")]),t._v(" "),a("p",[t._v("定时任务1")]),t._v(" "),a("p",[t._v("利用at设置一个任务自动化，在当天11：00钟，在根目录下自动创建一个abc目录，并进入到abc目录中，建立一个空的文件test，同时对该文件进行打包成test.tar;")]),t._v(" "),a("div",{staticClass:"language-cmd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("at 11pm today\nmkdir abc\ncd abc\ntouch test\ntar -czvf test.tar test\n<EOT>\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("定时任务2")]),t._v(" "),a("p",[t._v("Cron应用：每周2,4,6早上3点重新启动系统")]),t._v(" "),a("div",{staticClass:"language-cmd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("* * * * * myCommand # 每1分钟执行一次myCommand\ncrontab\n0 3 * * 2,4,6 reboot # 每周2,4,6早上3点重新启动系统\n# ctrl D 保存并退出\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("我们用"),a("strong",[t._v("crontab -e")]),t._v("进入当前用户的工作表编辑，是常见的vim界面。每行是一条命令。")]),t._v(" "),a("p",[t._v("crontab的命令构成为 时间+动作，其时间有"),a("strong",[t._v("分、时、日、月、周")]),t._v("五种，操作符有")]),t._v(" "),a("ul",[a("li",[t._v("***** 取值范围内的所有数字")]),t._v(" "),a("li",[a("strong",[t._v("/")]),t._v(" 每过多少个数字")]),t._v(" "),a("li",[a("strong",[t._v("-")]),t._v(" 从X到Z")]),t._v(" "),a("li",[t._v("**，**散列数字")])]),t._v(" "),a("h3",{attrs:{id:"linux下gcc的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux下gcc的使用"}},[t._v("#")]),t._v(" Linux下GCC的使用")]),t._v(" "),a("p",[t._v("gcc")]),t._v(" "),a("p",[t._v("-o：指定生成文件的名称")]),t._v(" "),a("p",[t._v("-E：激活预处理。生成预处理文件（ .i 文件）")]),t._v(" "),a("p",[t._v("-S：激活预处理、编译。生成汇编代码（ .s 文件）")]),t._v(" "),a("p",[t._v("-c：激活预处理、编译、汇编。生成目标文件（ .o 文件）")]),t._v(" "),a("p",[t._v("-I：指定头文件目录")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://shinoimg.yyshino.top/img/202305131600144.png",alt:"image-20230513160005625"}})]),t._v(" "),a("h4",{attrs:{id:"多个文件编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多个文件编译"}},[t._v("#")]),t._v(" 多个文件编译")]),t._v(" "),a("p",[t._v("现在有 3 个文件，分别是 main.c，print.c，print.h")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1）多个文件一起编译：")]),t._v("\ngcc print.c main.c "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" hello\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行生成文件")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2）分别编译各个源文件，再对编译后输出的目标文件（.o）链接")]),t._v("\ngcc "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" print.c "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" print.o\ngcc "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" main.c "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" main.o\ngcc print.o main.o "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" hello\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行生成文件")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("如果头文件和源文件不在一同目录中，如何解决？")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 头文件所在目录：myInclude")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 主要是要加 -I 指定头文件目录：")]),t._v("\ngcc print.c main.c "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" hello "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-I")]),t._v(" myInclude\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行文件")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h4",{attrs:{id:"makefile（makefile）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#makefile（makefile）"}},[t._v("#")]),t._v(" makefile（Makefile）")]),t._v(" "),a("p",[t._v("在使用gcc命令时，一个工程又有多个文件（比如100个文件），如果按照上述编译方法，往往需要输入很多指令，而且修改文件也不方便，因此引入makefile文件解决该问题。")]),t._v(" "),a("div",{staticClass:"language-makefile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-makefile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#main是需要生成的目标文件名，它依赖main.o print.o")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token target symbol"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("main.o print.o\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#gcc命令，生成main,语句前面要用TAB")]),t._v("\n\tgcc main.o input.o cal.o -o main\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#main.o是目标文件，依赖main.c文件，通过gcc -c main.c生成main.o文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token target symbol"}},[t._v("main.o")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("main.c\n\tgcc -c main.c\n"),a("span",{pre:!0,attrs:{class:"token target symbol"}},[t._v("print.o")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("print.c\n\tgcc -c print.c\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("h3",{attrs:{id:"shell"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shell"}},[t._v("#")]),t._v(" Shell")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" *.c\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出总行数")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# lines=`wc -l < $i`")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sum=`expr $sum + lines`")]),t._v("\n\t\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出.c文件个数")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expr")]),t._v(" $sum + "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$sum")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[t._v("变量的定义")]),t._v(" "),a("ul",[a("li",[t._v("命名只能使用"),a("strong",[t._v("英文字母，数字和下划线，首个字符不能以数字开头")]),t._v("。")]),t._v(" "),a("li",[t._v("中间"),a("strong",[t._v("不能有空格")]),t._v("，可以使用下划线 "),a("strong",[t._v("_")]),t._v("。")]),t._v(" "),a("li",[a("strong",[t._v("不能使用标点符")]),t._v("号。")]),t._v(" "),a("li",[a("strong",[t._v("不能使用bash里的关键字")]),t._v("（可用help命令查看保留关键字）。")])]),t._v(" "),a("p",[t._v("使用变量")]),t._v(" "),a("p",[a("code",[t._v("#!/bin/bash")]),t._v(" "),a("code",[t._v("echo")]),t._v(" "),a("code",[t._v("$")]),t._v(" "),a("code",[t._v("unset")])]),t._v(" "),a("p",[a("code",[t._v("(value0 value1 value2 value3 value4)")]),t._v(" "),a("code",[t._v("${数组名[下标]}")])]),t._v(" "),a("p",[a("code",[t._v("$0 $1 $2 $3")])]),t._v(" "),a("p",[t._v("运算符")]),t._v(" "),a("p",[a("code",[t._v("+")]),t._v(" "),a("code",[t._v("-")]),t._v(" "),a("code",[t._v("*")]),t._v(" "),a("code",[t._v("/")]),t._v(" "),a("code",[t._v("%")]),t._v(" "),a("code",[t._v("=")]),t._v(" "),a("code",[t._v("==")]),t._v(" "),a("code",[t._v("!=")])]),t._v(" "),a("p",[a("code",[t._v("-eq")]),t._v(" "),a("code",[t._v("-ne")]),t._v(" "),a("code",[t._v("-gt")]),t._v(" "),a("code",[t._v("-lt")]),t._v(" "),a("code",[t._v("-ge")]),t._v(" "),a("code",[t._v("-le")])]),t._v(" "),a("p",[a("code",[t._v("!")]),t._v(" "),a("code",[t._v("-o")]),t._v(" "),a("code",[t._v("a")])]),t._v(" "),a("p",[a("code",[t._v("&&")]),t._v(" "),a("code",[t._v("||")])]),t._v(" "),a("p",[t._v("输入/输出重定向")]),t._v(" "),a("p",[a("code",[t._v(">")]),t._v(" "),a("code",[t._v(">>")]),t._v(" "),a("code",[t._v(">&")])]),t._v(" "),a("p",[a("code",[t._v("<")]),t._v(" "),a("code",[t._v("<<")]),t._v(" "),a("code",[t._v("<&")])]),t._v(" "),a("p",[t._v("统计 users 文件的行数")]),t._v(" "),a("p",[a("code",[t._v("wc -l users")])])])}),[],!1,null,null,null);a.default=_.exports}}]);